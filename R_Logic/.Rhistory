results <- search_powo("Cardamine bulbifera")
tidy(results)
tidy(results)$author
new_name = "Cardamine bulbifera" + " " + tidy(results)$author
new_name = "Cardamine bulbifera"," ",tidy(results)$author
new_name = printf("Cardamine bulbifera"," ",tidy(results)$author)
new_name = print("Cardamine bulbifera"," ",tidy(results)$author)
new_name = paste("Cardamine bulbifera"," ",tidy(results)$author)
new_name
new_name = paste("Cardamine bulbifera",tidy(results)$author)
family = tidy(results)$family
results <- search_powo("Lantana trifolia")
results <- search_powo("Lantana trifolia")
tidy(results)
View(results)
results[["response"]][["url"]]
library(kewr)
kewr
?kewr
??kewr
results <- search_powo("Lantana trifolia")
tidy(results)
# new name for df
new_name = paste("Cardamine bulbifera",tidy(results)$author)
family = tidy(results)$family
View(results)
results[["results"]][[1]][["fqId"]]
lookup_powo("135333-2")
match_knms("Poa annua")
knms <- match_knms("Poa annua")
View(knms)
lookup_wcvp("135333-2")
results <- search_wcvp("Lantana trifolia")
tidy(results)
View(results)
miau <- lookup_wcvp("135333-2")
View(miau)
tidy(miau)
miau$synonyms
miau$synonyms[[1]]$name
miau$synonyms[[1]]$author
Species <- read_lines("./../data/species.txt") # read species txt
library(readr)
Species <- read_lines("./../data/species.txt") # read species txt
results <- search_wcvp("Lantana trifolia")
library(kewr)
results <- search_wcvp("Lantana trifolia")
tidy(results)
tidy(results)$id
tidy(results)$id[1]
miau <- lookup_wcvp("135333-2")
tidy(miau)
tidy(miau)
miau$synonyms[1]
miau$synonyms[1]$name
miau$synonyms[1]
miau$synonyms[[1]]$name
x <- miau$synonyms[[1]]$name
substr(x, 1, 3)
substr(x, 1, 4)
paste(substr(x, 1, 4), sub("^\\S+\\s+", "", x))
paste0(substr(x, 1, 4), sub("^\\S+\\s+", "", x))
paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4)
)
paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4))
tidy(results)
tidy(results)$name
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(Species)),
FULL_NAME=rep(NA,length(Species)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
for(i in 1:length(Species)){
id_var <- search_wcvp(i)
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check[[j]]$name
TAXON_ID <- paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4))
for(j in 1:length(syn_check)){
SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
}
idvar
tidy(id_var)$id[1]
tidy(id_var)
id_var
id_var
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check[[j]]$name
TAXON_ID <- paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4))
for(j in 1:length(syn_check)){
SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
}
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check[[i]]$name
TAXON_ID <- paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4))
for(j in 1:length(syn_check)){
SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
}
syn_check[[1]]
syn_check[1]
syn_check
syn_check$name
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4))
for(j in 1:length(syn_check)){
SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
}
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(x, 1, 4), substr(sub("^\\S+\\s+", "", x), 1, 4))
for(j in 1:length(syn_check)){
#  SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
}
View(PB_TAXA)
syn_check
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check)){
#  SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
print("Done with Species",i)
}
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check)){
#  SYN_NAMES[j] <- paste(syn_check[[j]]$name, syn_check[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
print("Done with Species")
}
warnings()
syn_check
syn_check[[1]]
syn_check[1]
syn_check
syn_check$synonyms
syn_check$synonyms[[1]]
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check)){
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
print("Done with Species")
}
syn_check$synonyms[[1]]
syn_check$synonyms[[1]]
length(syn_check)
length(syn_check$synonyms)
syn_check$synonyms
syn_check
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
print("Done with Species")
}
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
for(i in 1:length(Species)){
id_var <- search_wcvp(Species[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
print("Done with Species")
}
SPECIES <- read_lines("./../data/species.txt") # read species txt
library(kewr)
library(readr)
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(SPECIES)),
FULL_NAME=rep(NA,length(SPECIES)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
SYN_NAMES = c()
for(i in 1:length(SPECIES)){
id_var <- search_wcvp(SPECIES[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
# need to fix this
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
print("Done with Species")
}
PB_TAXA$FAMILY[1] <- SYN_NAMES
paste(SYN_NAMES, collapse = ", ")
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(SPECIES)),
FULL_NAME=rep(NA,length(SPECIES)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
SYN_NAMES = c()
for(i in 1:length(SPECIES)){
id_var <- search_wcvp(SPECIES[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
# need to fix this
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
PB_TAXA$FAMILY[i] <- paste(SYN_NAMES, collapse = ", ")
rm(SYN_NAMES)
SYN_NAMES = c()
print("Done with ", SPECIES[i])
}
printf("Done with ", SPECIES[i])
print0("Done with ", SPECIES[i])
print(paste0("Done with ", SPECIES[1]))
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(SPECIES)),
FULL_NAME=rep(NA,length(SPECIES)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
SYN_NAMES = c()
for(i in 1:length(SPECIES)){
id_var <- search_wcvp(SPECIES[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
# need to fix this
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
PB_TAXA$FAMILY[i] <- paste(SYN_NAMES, collapse = ", ")
rm(SYN_NAMES)
SYN_NAMES = c()
print(paste0("Done with ", SPECIES[i]))
}
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(SPECIES)),
FULL_NAME=rep(NA,length(SPECIES)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
SYN_NAMES = c()
for(i in 1:length(SPECIES)){
id_var <- search_wcvp(SPECIES[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
# need to fix this
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
PB_TAXA$SYNONYMS[i] <- paste(SYN_NAMES, collapse = ", ")
rm(SYN_NAMES)
SYN_NAMES = c()
print(paste0("Done with ", SPECIES[i]))
}
write.csv(PB_TAXA, file ="./../output/PB_TAXA.csv")
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(SPECIES)),
FULL_NAME=rep(NA,length(SPECIES)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
SYN_NAMES = c()
for(i in 1:length(SPECIES)){
id_var <- search_wcvp(SPECIES[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
# need to fix this
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- TAXON_ID
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
PB_TAXA$SYNONYMS[i] <- paste(SYN_NAMES, collapse = "; ")
rm(SYN_NAMES)
SYN_NAMES = c()
print(paste0("Done with ", SPECIES[i]))
}
SPECIES <- read_lines("./../data/species.txt") # read species txt
PB_TAXA <- data.frame(TAXON_ID=rep(NA,length(SPECIES)),
FULL_NAME=rep(NA,length(SPECIES)),
FAMILY=rep(NA,length(SPECIES)),
SYNONYMS=rep(NA,length(SPECIES)))
SYN_NAMES = c()
for(i in 1:length(SPECIES)){
id_var <- search_wcvp(SPECIES[i])
syn_check <- lookup_wcvp(tidy(id_var)$id[1]) # Grab the ID for WCVP
FULL_NAME <- paste(tidy(id_var)$name[1], tidy(id_var)$author[1])
FAMILY <- tidy(id_var)$family
X <- syn_check$name
TAXON_ID <- paste0(substr(X, 1, 4), substr(sub("^\\S+\\s+", "", X), 1, 4))
for(j in 1:length(syn_check$synonyms)){
if(length(syn_check$synonyms) == 0){
next
}
# need to fix this
SYN_NAMES[j] <- paste(syn_check$synonyms[[j]]$name, syn_check$synonyms[[j]]$author)
}
PB_TAXA$TAXON_ID[i] <- tolower(TAXON_ID)
PB_TAXA$FULL_NAME[i] <- FULL_NAME
PB_TAXA$FAMILY[i] <- FAMILY
PB_TAXA$SYNONYMS[i] <- paste(SYN_NAMES, collapse = "; ")
rm(SYN_NAMES)
SYN_NAMES = c()
print(paste0("Done with ", SPECIES[i]))
}
write.csv(PB_TAXA, file ="./../output/PB_TAXA.csv")
View(id_var)
View(syn_check)
install.packages("rgbif")
library("rgbif")
require(dismo)
maxent()
install.packages("rJava")
maxent()
fnames <- list.files(path="./../data/raster/", pattern = "asc")
fnames <- list.files(path="./../data/raster/", pattern = "asc", full.names = TRUE)
fnames <- list.files(path="./../data/raster/", pattern = "asc")
fnames <- list.files(path="./../data/raster/",
pattern = ".asc", full.names = TRUE)
fnames <- list.files(path="./../data/raster/",
pattern = ".asc$", full.names = TRUE)
predictors <- stack(fnames)
plot(predictors)
# load in our occurences
# we can replace the paste in the row below with a function variable
occurence <- paste("./../output/edible_plants/occurences_DAF_SUM.csv")
occ <- read.csv(occurence)
View(occ)
# We are gonna use 20% of the dataset as a testing sample
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors, occtrain, factors='biome')
me <- maxent(predictors, occtrain, factors='SPECIES')
me <- maxent(predictors, occtrain)
# remove first column
occ <- occ[,2:3]
View(occtest)
View(occ)
# We are gonna use 20% of the dataset as a testing sample
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors, occtrain)
me
# predict the entire dataset
r <- predict(me, predictors)
plot(r)
points(occ)
# testing
# background data
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
pvtest <- data.frame(extract(predictors, occtest))
avtest <- data.frame(extract(predictors, bg))
e2 <- evaluate(me, p=pvtest, a=avtest)
e2
e1
# remove first column
if(ncol(occ) = 2){
print("Occurence data has the right ncol")
} else if (ncol(occ) = 3){
print("removing col 1")
occ <- occ[,2:3]
} else {
print("ERROR: WRONG INPUT DATA (OCCURENCE)")
}
ncol(occ)
ncol(occ) = 2
ncol(occ) == 2
# remove first column
if(ncol(occ) == 2){
print("Occurence data has the right ncol")
} else if (ncol(occ) == 3){
print("removing col 1")
occ <- occ[,2:3]
} else {
print("ERROR: WRONG INPUT DATA (OCCURENCE)")
}
occ <- read.csv(occurence)
# remove first column
if(ncol(occ) == 2){
print("Occurence data has the right ncol")
} else if (ncol(occ) == 3){
print("removing col 1")
occ <- occ[,2:3]
} else {
print("ERROR: WRONG INPUT DATA (OCCURENCE)")
}
gc()
getwd()
load("~/Documents/MegaSync/Documents/Uni/MSc/Kullmer/PlantWare/R_Logic/.RData")
getwd()
